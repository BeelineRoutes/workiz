/** ****************************************************************************************************************** **
	Calls related to team members

    
** ****************************************************************************************************************** **/

package workiz 

import (
    "github.com/pkg/errors"
    
    //"fmt"
    "net/http"
    "context"
    
)

  //-----------------------------------------------------------------------------------------------------------------------//
 //----- CONSTS ----------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------//

  //-----------------------------------------------------------------------------------------------------------------------//
 //----- STRUCTS ---------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------//

type Member struct {
    Id, Name, Role, Email string 
    Active, FieldTech bool 
    ServiceAreas, Skills []string 
}

type teamResponse struct {
    Data []*Member
}

// takes the jobs out of whatever this parent object is for
func (this teamResponse) toMembers () (ret []*Member) {
    for _, m := range this.Data {
        if m.Active == false { continue }
        if m.FieldTech == false { continue }

        // they're good to get jobs
        ret = append (ret, m)
    }
    return 
}

  //-----------------------------------------------------------------------------------------------------------------------//
 //----- PRIVATE FUNCTIONS -----------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------//

  //-----------------------------------------------------------------------------------------------------------------------//
 //----- FUNCTIONS -------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------//

// returns all jobs that match our conditions
func (this *Workiz) ListTeam (ctx context.Context, token string) ([]*Member, error) {
    var resp teamResponse
    
    errObj, err := this.send (ctx, http.MethodGet, token, "team/all/", nil, &resp)
    if err != nil { return nil, errors.WithStack(err) } // bail
    if errObj != nil { return nil, errObj.Err() } // something else bad

    return resp.toMembers(), nil // we're good
}
